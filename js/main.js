/*Задание считается выполненным, если в проекте описаны следующие функции:

Функция, возвращающая случайное целое число из переданного диапазона включительно. Пример использования функции:

имя_функции(от, до); // Результат: целое число из диапазона "от...до"
Учтите, что диапазон может быть только положительный, включая ноль. А также придумайте, как функция должна вести себя,
если передать значение «до» меньшее, чем значение «от», или равное ему.



Функция, возвращающая случайное число с плавающей точкой из переданного диапазона включительно. Будет использоваться
для генерации временных географических координат в следующем задании. Пример использования функции:

имя_функции(от, до, количество_знаков_после_запятой); // Результат: число с плавающей точкой из диапазона "от...до"
с указанным "количеством знаков после запятой"
Учтите, что диапазон может быть только положительный, включая ноль. А также придумайте, как функция должна вести себя,
если передать значение «до» меньшее, чем значение «от», или равное ему. Не забудьте, что в случае с дробными числами
диапазон может быть в десятых, сотых, тысячных и т. д. долях. Например, 1.1, 1.2 — корректный диапазон.
*/



// функция возвращает случайное число с плавающей точкой из заданного диапазона


let getRandom = (startNumber, endNumber) =>  Math.floor(Math.random() * (endNumber - startNumber) + startNumber);
console.log(getRandom(0, 42));


/*let randomizeGet = Math.random() * (endNumber - startNumber + 1) + startNumber;*/




// функция делает то же, что предыдущая, - но возвращает не только число, но и число знаков после запятой.
// причем числа функций только положительные. Дробные, само собой.

let getRandomize = (startNumber, endNumber) =>  Math.random() * (endNumber - startNumber) + startNumber;
console.log(getRandomize(1, 42));

// так выглядит стрелочность: const getWizardX = (gameFieldWidth) => (gameFieldWidth - WIZARD_WIDTH) / 2;


